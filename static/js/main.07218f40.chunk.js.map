{"version":3,"sources":["data/levels.ts","data/maps.ts","data/scrolls.ts","store/slice.ts","components/Home.tsx","utils/geometryUtils.ts","store/selectors.ts","utils/useInterval.ts","components/PlayButton.tsx","components/Token.tsx","components/icons/Bee.tsx","components/icons/Hexagon.tsx","components/icons/Hive.tsx","components/GameScroll.tsx","utils/useDrag.ts","components/FlyingBee.tsx","components/LevelMap.tsx","components/Game.tsx","components/App.tsx","store/index.ts","reportWebVitals.ts","index.tsx"],"names":["levels","id","mapId","scrollId","crystalLocs","startLoc","portalLoc","conditionalTokens","colorTokens","tokenType","amount","trollType","mapConfigs","trollLocs","orange","purple","nodes","x","y","paths","color","nodeIdxs","middleCoords","selfLoopDirection","directional","xOffset","scrolls","type","isStart","coords","next","index","isGoal","nextIf","nextElse","midpoints","portalPos","initialState","crystalsOnMapNode","tokens","playerLoc","playingScrollNode","level","playbackInProgress","gameSlice","createSlice","name","reducers","resetState","loadLevel","state","action","payload","forEach","loc","map","token","resetLevel","moveToken","tokenIdx","scrollNodeIdx","scrollNode","setPlayback","advancePlayer","scroll","find","s","m","t","path","p","colorMatch","nodeMatch","includes","newLoc","evaluateCondition","crystalsLeft","Object","values","reduce","a","b","length","actions","isDisabled","every","Container","styled","div","Item","button","Home","dispatch","useDispatch","React","useEffect","to","disabled","getPointRAwayAlongLine","nearPoint","farPoint","R","deltaX","deltaY","x1","y1","x2","y2","Math","sqrt","getArrowCoords","arrowOrigin","arrowDest","crossLength","arrowCrossMidpoint","arrowCrossPoints","Infinity","getPointsRAwayGivenSlope","point1","point2","getSlope","drawArrow","startNodePos","nextNodePos","nodeSpacing","firstMidpoint","lastMidpoint","slice","allButLastMidpoints","hexagon","center","radius","offset","points","i","angle","PI","push","cos","sin","pointInADirection","point","direction","distance","PHI","selectMapNodes","selectIsScrollFull","createSelector","_","some","selectNumCrystalsRemaining","useInterval","callback","delay","savedCallback","useRef","useLayoutEffect","current","setInterval","clearInterval","P_L","P_C","PlayButton","isScrollFull","useSelector","isPlaying","width","height","fill","onClick","shadowColor","Token","tokenState","size","isEmpty","onMouseDown","isFlashing","filter","useSpring","from","loop","config","slow","circle","cx","cy","r","stroke","strokeWidth","strokeDasharray","pointerEvents","alignmentBaseline","textAnchor","fontSize","cursor","Bee","memo","viewBox","clipPath","d","Hexagon","join","Hive","ignoreEmpty","emptyHexes","W","GameScroll","useState","tokensFlashing","setTokensFlashing","nodeRadius","svgRef","dragTokenIdx","setDragTokenIdx","dragStart","setDragStart","dragCenter","setDragCenter","closeNodeIdx","setCloseNodeIdx","startDrag","event","preventDefault","DOMPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","closeNodeIdxTemp","mousemove","e","closeEnough","findIndex","node","tIdx","document","addEventListener","mouseup","removeEventListener","useDrag","tokenContainerHeight","dragToken","preserveAspectRatio","ref","rx","NODE_RADIUS","shapes","renderArrow","origin","key","arrowPoints","portalCenter","filledIdx","NODE_STROKE_WIDTH","beeCenter","playerPos","transform","FlyingBee","nodeSideLength","mapNode","g","NODE_SIDE_LENGTH","LevelMap","pointsArr","S","N","sign","start","end","startCoords","endCoords","trollColor","keys","c","hasTrollColor","numCrystals","L","Game","levelId","useParams","levelIdNumber","parseInt","l","loadedLevel","mapConfig","App","element","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.07218f40.chunk.js","sourcesContent":["import { PathColor, TrollType } from \"./maps\";\n\ntype ConditionalCrystalToken = {\n  tokenType: \"crystal\";\n  amount: number;\n};\n\ntype ConditionalTrollToken = {\n  tokenType: \"troll\";\n  trollType: TrollType;\n};\n\nexport type ConditionalToken = ConditionalCrystalToken | ConditionalTrollToken;\n\nexport type Level = {\n  id: number;\n  mapId: number;\n  scrollId: number;\n  crystalLocs: number[];\n  startLoc: number;\n  portalLoc: number;\n  conditionalTokens: ConditionalToken[];\n  colorTokens: PathColor[];\n};\n\nexport const levels: Level[] = [\n  {\n    id: 1,\n    mapId: 1,\n    scrollId: 1,\n    crystalLocs: [],\n    startLoc: 5,\n    portalLoc: 3,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\"],\n  },\n  {\n    id: 2,\n    mapId: 2,\n    scrollId: 1,\n    crystalLocs: [0],\n    startLoc: 3,\n    portalLoc: 5,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"blue\", \"blue\"],\n  },\n  {\n    id: 3,\n    mapId: 3,\n    scrollId: 1,\n    crystalLocs: [1, 5],\n    startLoc: 4,\n    portalLoc: 0,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 4,\n    mapId: 4,\n    scrollId: 2,\n    crystalLocs: [3, 4],\n    startLoc: 1,\n    portalLoc: 5,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 5,\n    mapId: 5,\n    scrollId: 1,\n    crystalLocs: [3],\n    startLoc: 2,\n    portalLoc: 5,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 6,\n    mapId: 6,\n    scrollId: 2,\n    crystalLocs: [1, 4],\n    startLoc: 5,\n    portalLoc: 0,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 7,\n    mapId: 7,\n    scrollId: 2,\n    crystalLocs: [],\n    startLoc: 0,\n    portalLoc: 8,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 8,\n    mapId: 8,\n    scrollId: 1,\n    crystalLocs: [],\n    startLoc: 7,\n    portalLoc: 4,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 9,\n    mapId: 9,\n    scrollId: 2,\n    crystalLocs: [0, 7],\n    startLoc: 9,\n    portalLoc: 4,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 10,\n    mapId: 10,\n    scrollId: 3,\n    crystalLocs: [],\n    startLoc: 2,\n    portalLoc: 6,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 11,\n    mapId: 1,\n    scrollId: 1,\n    crystalLocs: [1],\n    startLoc: 2,\n    portalLoc: 4,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 12,\n    mapId: 2,\n    scrollId: 2,\n    crystalLocs: [],\n    startLoc: 5,\n    portalLoc: 0,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 13,\n    mapId: 3,\n    scrollId: 2,\n    crystalLocs: [4, 4],\n    startLoc: 5,\n    portalLoc: 0,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 14,\n    mapId: 4,\n    scrollId: 2,\n    crystalLocs: [4, 4, 5],\n    startLoc: 0,\n    portalLoc: 4,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 15,\n    mapId: 5,\n    scrollId: 2,\n    crystalLocs: [2, 5],\n    startLoc: 4,\n    portalLoc: 0,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 16,\n    mapId: 6,\n    scrollId: 4,\n    crystalLocs: [2, 2, 2, 4, 4, 4],\n    startLoc: 1,\n    portalLoc: 3,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 6 }],\n    colorTokens: [\"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 17,\n    mapId: 7,\n    scrollId: 3,\n    crystalLocs: [0, 4],\n    startLoc: 3,\n    portalLoc: 5,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"green\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 18,\n    mapId: 8,\n    scrollId: 3,\n    crystalLocs: [11],\n    startLoc: 9,\n    portalLoc: 2,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"green\", \"blue\", \"blue\", \"blue\"],\n  },\n  {\n    id: 19,\n    mapId: 9,\n    scrollId: 3,\n    crystalLocs: [0, 4],\n    startLoc: 2,\n    portalLoc: 8,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"green\", \"blue\", \"blue\", \"blue\"],\n  },\n  {\n    id: 20,\n    mapId: 10,\n    scrollId: 5,\n    crystalLocs: [2],\n    startLoc: 6,\n    portalLoc: 0,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"blue\", \"blue\", \"blue\"],\n  },\n  {\n    id: 21,\n    mapId: 1,\n    scrollId: 2,\n    crystalLocs: [1, 1],\n    startLoc: 0,\n    portalLoc: 5,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 22,\n    mapId: 2,\n    scrollId: 3,\n    crystalLocs: [3, 4],\n    startLoc: 5,\n    portalLoc: 0,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"green\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 23,\n    mapId: 3,\n    scrollId: 4,\n    crystalLocs: [1, 3],\n    startLoc: 2,\n    portalLoc: 4,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 2 }],\n    colorTokens: [\"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 24,\n    mapId: 4,\n    scrollId: 5,\n    crystalLocs: [4, 4, 5, 5],\n    startLoc: 0,\n    portalLoc: 5,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 25,\n    mapId: 5,\n    scrollId: 4,\n    crystalLocs: [],\n    startLoc: 5,\n    portalLoc: 0,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"orange\" }],\n    colorTokens: [\"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 26,\n    mapId: 6,\n    scrollId: 5,\n    crystalLocs: [2, 3, 3, 4],\n    startLoc: 0,\n    portalLoc: 1,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"blue\", \"blue\", \"blue\"],\n  },\n  {\n    id: 27,\n    mapId: 7,\n    scrollId: 4,\n    crystalLocs: [2, 5],\n    startLoc: 0,\n    portalLoc: 1,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 2 }],\n    colorTokens: [\"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 28,\n    mapId: 8,\n    scrollId: 5,\n    crystalLocs: [2],\n    startLoc: 9,\n    portalLoc: 4,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"blue\", \"blue\", \"blue\"],\n  },\n  {\n    id: 29,\n    mapId: 9,\n    scrollId: 3,\n    crystalLocs: [6, 9],\n    startLoc: 5,\n    portalLoc: 8,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"green\", \"green\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 30,\n    mapId: 10,\n    scrollId: 6,\n    crystalLocs: [3],\n    startLoc: 6,\n    portalLoc: 6,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"orange\" }],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 31,\n    mapId: 1,\n    scrollId: 6,\n    crystalLocs: [1, 1, 5],\n    startLoc: 2,\n    portalLoc: 4,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 2 }],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 32,\n    mapId: 2,\n    scrollId: 3,\n    crystalLocs: [0, 1, 5, 5],\n    startLoc: 4,\n    portalLoc: 5,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 33,\n    mapId: 3,\n    scrollId: 4,\n    crystalLocs: [3, 3, 3],\n    startLoc: 1,\n    portalLoc: 4,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"orange\" }],\n    colorTokens: [\"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 34,\n    mapId: 4,\n    scrollId: 7,\n    crystalLocs: [1, 4, 4],\n    startLoc: 3,\n    portalLoc: 4,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"purple\" }],\n    colorTokens: [\"red\", \"green\", \"green\", \"blue\", \"blue\", \"blue\"],\n  },\n  {\n    id: 35,\n    mapId: 5,\n    scrollId: 8,\n    crystalLocs: [2, 5, 5],\n    startLoc: 4,\n    portalLoc: 0,\n    conditionalTokens: [\n      { tokenType: \"crystal\", amount: 2 },\n      { tokenType: \"crystal\", amount: 3 },\n    ],\n    colorTokens: [\"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 36,\n    mapId: 6,\n    scrollId: 7,\n    crystalLocs: [0, 3, 3],\n    startLoc: 2,\n    portalLoc: 1,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"orange\" }],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 37,\n    mapId: 7,\n    scrollId: 6,\n    crystalLocs: [3, 8],\n    startLoc: 1,\n    portalLoc: 5,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 1 }],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 38,\n    mapId: 8,\n    scrollId: 6,\n    crystalLocs: [1],\n    startLoc: 8,\n    portalLoc: 2,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"orange\" }],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 39,\n    mapId: 9,\n    scrollId: 5,\n    crystalLocs: [2, 4, 9],\n    startLoc: 3,\n    portalLoc: 0,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 40,\n    mapId: 10,\n    scrollId: 9,\n    crystalLocs: [2, 4, 9, 11],\n    startLoc: 8,\n    portalLoc: 6,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"purple\" }],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"blue\", \"blue\", \"blue\"],\n  },\n  {\n    id: 41,\n    mapId: 1,\n    scrollId: 8,\n    crystalLocs: [2, 3, 4],\n    startLoc: 1,\n    portalLoc: 0,\n    conditionalTokens: [\n      { tokenType: \"troll\", trollType: \"purple\" },\n      { tokenType: \"troll\", trollType: \"orange\" },\n    ],\n    colorTokens: [\"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 42,\n    mapId: 2,\n    scrollId: 10,\n    crystalLocs: [3, 3, 3, 4, 4, 4],\n    startLoc: 0,\n    portalLoc: 2,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"purple\" }],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 43,\n    mapId: 3,\n    scrollId: 8,\n    crystalLocs: [0, 1, 2, 3, 4],\n    startLoc: 5,\n    portalLoc: 3,\n    conditionalTokens: [\n      { tokenType: \"crystal\", amount: 1 },\n      { tokenType: \"crystal\", amount: 5 },\n    ],\n    colorTokens: [\"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 44,\n    mapId: 4,\n    scrollId: 6,\n    crystalLocs: [0, 4, 5],\n    startLoc: 2,\n    portalLoc: 3,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 1 }],\n    colorTokens: [\"red\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 45,\n    mapId: 5,\n    scrollId: 11,\n    crystalLocs: [1, 1, 1],\n    startLoc: 2,\n    portalLoc: 3,\n    conditionalTokens: [\n      { tokenType: \"troll\", trollType: \"purple\" },\n      { tokenType: \"crystal\", amount: 3 },\n    ],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 46,\n    mapId: 6,\n    scrollId: 12,\n    crystalLocs: [0, 1, 1, 1, 4],\n    startLoc: 3,\n    portalLoc: 4,\n    conditionalTokens: [\n      { tokenType: \"troll\", trollType: \"orange\" },\n      { tokenType: \"crystal\", amount: 2 },\n      { tokenType: \"crystal\", amount: 5 },\n    ],\n    colorTokens: [\"red\", \"red\", \"green\", \"blue\"],\n  },\n  {\n    id: 47,\n    mapId: 7,\n    scrollId: 7,\n    crystalLocs: [1, 6],\n    startLoc: 0,\n    portalLoc: 8,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 1 }],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 48,\n    mapId: 8,\n    scrollId: 10,\n    crystalLocs: [6, 11],\n    startLoc: 1,\n    portalLoc: 3,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 2 }],\n    colorTokens: [\"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 49,\n    mapId: 9,\n    scrollId: 5,\n    crystalLocs: [2, 3, 6],\n    startLoc: 1,\n    portalLoc: 8,\n    conditionalTokens: [],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 50,\n    mapId: 10,\n    scrollId: 7,\n    crystalLocs: [4, 4, 5, 11, 11],\n    startLoc: 8,\n    portalLoc: 11,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 1 }],\n    colorTokens: [\"red\", \"green\", \"green\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 51,\n    mapId: 1,\n    scrollId: 12,\n    crystalLocs: [0, 5, 5],\n    startLoc: 4,\n    portalLoc: 0,\n    conditionalTokens: [\n      { tokenType: \"troll\", trollType: \"orange\" },\n      { tokenType: \"crystal\", amount: 2 },\n      { tokenType: \"crystal\", amount: 3 },\n    ],\n    colorTokens: [\"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 52,\n    mapId: 2,\n    scrollId: 7,\n    crystalLocs: [0, 1, 1, 2, 4],\n    startLoc: 5,\n    portalLoc: 3,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"orange\" }],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 53,\n    mapId: 3,\n    scrollId: 12,\n    crystalLocs: [0, 0, 2, 2],\n    startLoc: 4,\n    portalLoc: 4,\n    conditionalTokens: [\n      { tokenType: \"crystal\", amount: 4 },\n      { tokenType: \"troll\", trollType: \"orange\" },\n      { tokenType: \"troll\", trollType: \"purple\" },\n    ],\n    colorTokens: [\"red\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 54,\n    mapId: 4,\n    scrollId: 11,\n    crystalLocs: [1, 4, 5],\n    startLoc: 3,\n    portalLoc: 0,\n    conditionalTokens: [\n      { tokenType: \"crystal\", amount: 2 },\n      { tokenType: \"crystal\", amount: 3 },\n    ],\n    colorTokens: [\"red\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 55,\n    mapId: 5,\n    scrollId: 11,\n    crystalLocs: [1, 1, 4, 5],\n    startLoc: 0,\n    portalLoc: 5,\n    conditionalTokens: [\n      { tokenType: \"crystal\", amount: 1 },\n      { tokenType: \"crystal\", amount: 4 },\n    ],\n    colorTokens: [\"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 56,\n    mapId: 6,\n    scrollId: 9,\n    crystalLocs: [1, 1, 2, 3, 3],\n    startLoc: 4,\n    portalLoc: 1,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 5 }],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"green\", \"green\", \"blue\"],\n  },\n  {\n    id: 57,\n    mapId: 7,\n    scrollId: 11,\n    crystalLocs: [2, 3, 3, 4, 5, 7],\n    startLoc: 0,\n    portalLoc: 0,\n    conditionalTokens: [\n      { tokenType: \"crystal\", amount: 4 },\n      { tokenType: \"troll\", trollType: \"orange\" },\n    ],\n    colorTokens: [\"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 58,\n    mapId: 8,\n    scrollId: 9,\n    crystalLocs: [0, 9, 10],\n    startLoc: 5,\n    portalLoc: 8,\n    conditionalTokens: [{ tokenType: \"troll\", trollType: \"orange\" }],\n    colorTokens: [\"red\", \"red\", \"green\", \"green\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 59,\n    mapId: 9,\n    scrollId: 11,\n    crystalLocs: [2, 5, 7, 7, 7],\n    startLoc: 0,\n    portalLoc: 1,\n    conditionalTokens: [\n      { tokenType: \"troll\", trollType: \"orange\" },\n      { tokenType: \"crystal\", amount: 2 },\n    ],\n    colorTokens: [\"red\", \"green\", \"blue\", \"blue\"],\n  },\n  {\n    id: 60,\n    mapId: 10,\n    scrollId: 9,\n    crystalLocs: [2, 9],\n    startLoc: 8,\n    portalLoc: 9,\n    conditionalTokens: [{ tokenType: \"crystal\", amount: 2 }],\n    colorTokens: [\"red\", \"red\", \"red\", \"green\", \"green\", \"blue\", \"blue\"],\n  },\n];\n","import { Coord } from \"../utils/geometryUtils\";\n\nexport type PathColor = \"green\" | \"red\" | \"blue\";\nexport type TrollType = \"orange\" | \"purple\";\n\ntype Path = {\n  color: PathColor;\n  nodeIdxs: [number, number];\n  directional?: boolean;\n  middleCoords?: Coord[];\n  selfLoopDirection?: \"up\" | \"down\";\n  xOffset?: number;\n};\n\nexport type MapConfig = {\n  id: number;\n  nodes: Coord[];\n  paths: Path[];\n  trollLocs: Record<TrollType, number[]>;\n};\n\nexport const mapConfigs: MapConfig[] = [\n  {\n    id: 1,\n    trollLocs: { orange: [5], purple: [0] },\n    nodes: [\n      { x: 10, y: 30 },\n      { x: 50, y: 30 },\n      { x: 90, y: 30 },\n      { x: 10, y: 70 },\n      { x: 50, y: 70 },\n      { x: 90, y: 70 },\n    ],\n    paths: [\n      {\n        color: \"red\",\n        nodeIdxs: [0, 1],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [0, 2],\n        middleCoords: [{ x: 50, y: 20 }],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [0, 4],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [1, 3],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [1, 2],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [2, 5],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [3, 4],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [3, 5],\n        middleCoords: [{ x: 50, y: 80 }],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [4, 5],\n      },\n    ],\n  },\n  {\n    id: 2,\n    trollLocs: { orange: [1], purple: [2] },\n    nodes: [\n      { x: 40, y: 20 },\n      { x: 20, y: 50 },\n      { x: 40, y: 50 },\n      { x: 60, y: 50 },\n      { x: 80, y: 50 },\n      { x: 60, y: 80 },\n    ],\n    paths: [\n      {\n        color: \"red\",\n        nodeIdxs: [0, 2],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [0, 4],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [0, 1],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [1, 5],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [1, 2],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [2, 3],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [3, 4],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [3, 5],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [4, 5],\n      },\n    ],\n  },\n  {\n    id: 3,\n    trollLocs: { orange: [4], purple: [0] },\n    nodes: [\n      { x: 10, y: 30 },\n      { x: 50, y: 30 },\n      { x: 90, y: 30 },\n      { x: 10, y: 70 },\n      { x: 50, y: 70 },\n      { x: 90, y: 70 },\n    ],\n    paths: [\n      {\n        color: \"red\",\n        nodeIdxs: [0, 1],\n        middleCoords: [{ x: 30, y: 25 }],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [0, 1],\n        middleCoords: [{ x: 30, y: 35 }],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [0, 3],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [1, 2],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [2, 3],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [2, 5],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [3, 4],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [4, 5],\n        middleCoords: [{ x: 70, y: 65 }],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [4, 5],\n        middleCoords: [{ x: 70, y: 75 }],\n      },\n    ],\n  },\n  {\n    id: 4,\n    trollLocs: { purple: [0, 5], orange: [] },\n    nodes: [\n      { x: 20, y: 30 },\n      { x: 20, y: 60 },\n      { x: 50, y: 60 },\n      { x: 70, y: 60 },\n      { x: 90, y: 60 },\n      { x: 70, y: 30 },\n    ],\n    paths: [\n      {\n        color: \"blue\",\n        nodeIdxs: [0, 0],\n        selfLoopDirection: \"up\",\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [0, 1],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [0, 1],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [1, 2],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [2, 3],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [2, 5],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [3, 4],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [3, 5],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [4, 5],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [4, 4],\n        selfLoopDirection: \"down\",\n      },\n    ],\n  },\n  {\n    id: 5,\n    trollLocs: { purple: [3], orange: [0] },\n    nodes: [\n      { x: 16, y: 50 },\n      { x: 32, y: 30 },\n      { x: 32, y: 70 },\n      { x: 50, y: 50 },\n      { x: 68, y: 30 },\n      { x: 84, y: 70 },\n    ],\n    paths: [\n      {\n        color: \"green\",\n        nodeIdxs: [0, 1],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [0, 4],\n        middleCoords: [{ x: 20, y: 15 }],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [0, 5],\n        middleCoords: [{ x: 24, y: 85 }],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [1, 2],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [1, 3],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [2, 3],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [2, 5],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [3, 4],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [4, 5],\n      },\n    ],\n  },\n  {\n    id: 6,\n    trollLocs: { purple: [2], orange: [1, 4] },\n    nodes: [\n      { x: 14, y: 50 },\n      { x: 34, y: 20 },\n      { x: 34, y: 80 },\n      { x: 66, y: 20 },\n      { x: 66, y: 80 },\n      { x: 86, y: 50 },\n    ],\n    paths: [\n      {\n        color: \"red\",\n        nodeIdxs: [0, 1],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [1, 2],\n        directional: true,\n        xOffset: -1.5,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [1, 3],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [1, 4],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [2, 0],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [2, 1],\n        directional: true,\n        xOffset: 1.5,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [2, 4],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [3, 2],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [3, 4],\n        directional: true,\n        xOffset: 1.5,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [4, 3],\n        directional: true,\n        xOffset: -1.5,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [4, 5],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [5, 3],\n        directional: true,\n      },\n    ],\n  },\n  {\n    id: 7,\n    trollLocs: { orange: [0], purple: [] },\n    nodes: [\n      { x: 14, y: 35 },\n      { x: 14, y: 65 },\n      { x: 40, y: 20 },\n      { x: 40, y: 50 },\n      { x: 40, y: 80 },\n      { x: 66, y: 35 },\n      { x: 66, y: 65 },\n      { x: 86, y: 35 },\n      { x: 86, y: 65 },\n    ],\n    paths: [\n      {\n        color: \"green\",\n        nodeIdxs: [0, 1],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [0, 2],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [0, 3],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [1, 4],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [2, 3],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [2, 5],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [3, 4],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [4, 6],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [5, 6],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [5, 7],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [6, 8],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [7, 8],\n      },\n    ],\n  },\n  {\n    id: 8,\n    trollLocs: { orange: [3, 9, 10], purple: [] },\n    nodes: [\n      { x: 50, y: 16 },\n      { x: 30, y: 30 },\n      { x: 70, y: 30 },\n      { x: 50, y: 44 },\n      { x: 10, y: 60 },\n      { x: 35, y: 65 },\n      { x: 65, y: 65 },\n      { x: 90, y: 60 },\n      { x: 10, y: 85 },\n      { x: 35, y: 85 },\n      { x: 65, y: 85 },\n      { x: 90, y: 85 },\n    ],\n    paths: [\n      {\n        color: \"red\",\n        nodeIdxs: [0, 0],\n        selfLoopDirection: \"up\",\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [0, 1],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [0, 2],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [1, 3],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [1, 4],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [2, 1],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [2, 3],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [3, 6],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [4, 5],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [4, 8],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [4, 9],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [5, 3],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [5, 9],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [6, 5],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [6, 7],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [6, 10],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [7, 2],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [7, 11],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [8, 8],\n        selfLoopDirection: \"down\",\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [8, 9],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [9, 10],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [10, 7],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [10, 11],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [11, 11],\n        selfLoopDirection: \"down\",\n      },\n    ],\n  },\n  {\n    id: 9,\n    trollLocs: { orange: [1], purple: [] },\n    nodes: [\n      { x: 50, y: 6.69872981078 },\n      { x: 37.5, y: 28.349364905389038 },\n      { x: 62.5, y: 28.349364905389024 },\n      { x: 25, y: 50 },\n      { x: 50, y: 50 },\n      { x: 75, y: 50 },\n      { x: 12.5, y: 71.65063509461098 },\n      { x: 37.5, y: 71.65063509461098 },\n      { x: 62.5, y: 71.65063509461096 },\n      { x: 87.5, y: 71.65063509461098 },\n    ],\n    paths: [\n      {\n        color: \"blue\",\n        nodeIdxs: [0, 1],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [0, 6],\n        middleCoords: [{ x: 12.5, y: 28.349364905400012 }],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [0, 9],\n        middleCoords: [{ x: 87.5, y: 28.349364905400012 }],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [1, 2],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [1, 3],\n        middleCoords: [{ x: 24.019237886466836, y: 35 }],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [1, 3],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [2, 0],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [2, 4],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [2, 5],\n        middleCoords: [{ x: 75.98076211353316, y: 35 }],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [3, 4],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [3, 6],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [4, 1],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [4, 5],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [4, 7],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [5, 2],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [5, 8],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [6, 7],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [6, 9],\n        middleCoords: [{ x: 50, y: 93.3012701892 }],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [7, 3],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [7, 8],\n        directional: true,\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [7, 8],\n        middleCoords: [{ x: 50, y: 80 }],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [8, 4],\n        directional: true,\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [8, 9],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [9, 5],\n        directional: true,\n      },\n    ],\n  },\n  {\n    id: 10,\n    trollLocs: { orange: [7, 10], purple: [4] },\n    nodes: [\n      { x: 15, y: 35 }, // 0\n      { x: 32.5, y: 25 },\n      { x: 50, y: 15 }, // 2\n      { x: 67.5, y: 25 },\n      { x: 85, y: 35 }, // 4\n      { x: 40, y: 50 },\n      { x: 60, y: 50 }, // 6\n      { x: 15, y: 65 },\n      { x: 32.5, y: 75 }, // 8\n      { x: 50, y: 85 },\n      { x: 67.5, y: 75 }, // 10\n      { x: 85, y: 65 },\n    ],\n    paths: [\n      {\n        color: \"red\",\n        nodeIdxs: [0, 1],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [0, 7],\n        directional: true,\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [1, 2],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [1, 5],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [2, 2],\n        selfLoopDirection: \"up\",\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [2, 3],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [3, 4],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [3, 6],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [4, 11],\n        directional: true,\n        middleCoords: [{ x: 92, y: 50 }],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [5, 6],\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [5, 8],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [6, 10],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [7, 0],\n        directional: true,\n        middleCoords: [{ x: 8, y: 50 }],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [7, 8],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [8, 9],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [9, 9],\n        selfLoopDirection: \"down\",\n      },\n      {\n        color: \"green\",\n        nodeIdxs: [9, 10],\n      },\n      {\n        color: \"red\",\n        nodeIdxs: [10, 11],\n      },\n      {\n        color: \"blue\",\n        nodeIdxs: [11, 4],\n        directional: true,\n      },\n    ],\n  },\n];\n","import { Coord } from \"../utils/geometryUtils\";\n\nexport type NextNode = {\n  index: number;\n  isGoal?: boolean;\n  midpoints?: Coord[];\n};\n\ninterface IScrollNode {\n  type: \"path\" | \"condition\";\n  coords: Coord;\n  isStart?: boolean;\n}\n\ninterface PathScrollNode extends IScrollNode {\n  type: \"path\";\n  next: NextNode;\n}\n\ninterface ConditionScrollNode extends IScrollNode {\n  type: \"condition\";\n  nextIf: NextNode;\n  nextElse: NextNode;\n}\n\ntype ScrollNode = PathScrollNode | ConditionScrollNode;\n\ntype Direction = \"up\" | \"down\" | \"left\" | \"right\";\n\nexport type Scroll = {\n  id: number;\n  nodes: ScrollNode[];\n  playerPos?: Direction;\n  portalPos?: Direction;\n};\n\nexport const scrolls: Scroll[] = [\n  {\n    id: 1,\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 46, y: 50 },\n        next: { index: 1 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 82, y: 50 },\n        next: { index: 2 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 118, y: 50 },\n        next: { index: 3 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 154, y: 50 },\n        next: { index: -1, isGoal: true },\n      },\n    ],\n  },\n  {\n    id: 2,\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 46, y: 35 },\n        next: { index: 1 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 82, y: 35 },\n        next: { index: 2 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 118, y: 35 },\n        next: { index: 3 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 118, y: 65 },\n        next: { index: 4 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 154, y: 65 },\n        next: { index: -1, isGoal: true },\n      },\n    ],\n  },\n  {\n    id: 3,\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 46, y: 25 },\n        next: { index: 1 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 82, y: 25 },\n        next: { index: 2 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 82, y: 50 },\n        next: { index: 3 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 118, y: 50 },\n        next: { index: 4 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 118, y: 75 },\n        next: { index: 5 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 154, y: 75 },\n        next: { index: -1, isGoal: true },\n      },\n    ],\n  },\n  {\n    id: 4,\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 46, y: 60 },\n        next: { index: 1 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 82, y: 60 },\n        next: { index: 2 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 118, y: 60 },\n        next: { index: 3 },\n      },\n      {\n        type: \"condition\",\n        coords: { x: 154, y: 60 },\n        nextIf: { index: -1, isGoal: true },\n        nextElse: {\n          index: 0,\n          midpoints: [\n            { x: 154, y: 35 },\n            { x: 46, y: 35 },\n          ],\n        },\n      },\n    ],\n  },\n  {\n    id: 5,\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 46, y: 25 },\n        next: { index: 1 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 82, y: 25 },\n        next: { index: 2 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 82, y: 50 },\n        next: { index: 3 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 82, y: 75 },\n        next: { index: 4 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 118, y: 75 },\n        next: { index: 5 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 154, y: 75 },\n        next: { index: 6 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 154, y: 50 },\n        next: { index: -1, isGoal: true },\n      },\n    ],\n  },\n  {\n    id: 6,\n    portalPos: \"down\",\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 40, y: 50 },\n        next: { index: 1 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 70, y: 50 },\n        next: { index: 2 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 100, y: 50 },\n        next: { index: 3 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 130, y: 50 },\n        next: { index: 4 },\n      },\n      {\n        type: \"condition\",\n        coords: { x: 160, y: 50 },\n        nextElse: { index: -1, isGoal: true },\n        nextIf: {\n          index: 0,\n          midpoints: [\n            { x: 160, y: 25 },\n            { x: 40, y: 25 },\n          ],\n        },\n      },\n    ],\n  },\n  {\n    id: 7,\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 40, y: 50 },\n        next: { index: 1 },\n      },\n      {\n        type: \"condition\",\n        coords: { x: 70, y: 50 },\n        nextIf: { index: 2 },\n        nextElse: {\n          index: 5,\n          midpoints: [{ x: 70, y: 75 }],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 100, y: 50 },\n        next: { index: 3 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 130, y: 50 },\n        next: { index: 4 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 160, y: 50 },\n        next: {\n          index: 1,\n          midpoints: [\n            { x: 160, y: 25 },\n            { x: 70, y: 25 },\n          ],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 100, y: 75 },\n        next: { index: 6 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 130, y: 75 },\n        next: { index: -1, isGoal: true },\n      },\n    ],\n  },\n  {\n    id: 8,\n    nodes: [\n      {\n        type: \"condition\",\n        isStart: true,\n        coords: { x: 60, y: 50 },\n        nextIf: {\n          index: 1,\n          midpoints: [{ x: 60, y: 35 }],\n        },\n        nextElse: {\n          index: 2,\n          midpoints: [{ x: 60, y: 65 }],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 90, y: 35 },\n        next: {\n          index: 3,\n          midpoints: [{ x: 120, y: 35 }],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 90, y: 65 },\n        next: {\n          index: 3,\n          midpoints: [{ x: 120, y: 65 }],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 120, y: 50 },\n        next: { index: 4 },\n      },\n      {\n        type: \"condition\",\n        coords: { x: 150, y: 50 },\n        nextIf: { index: -1, isGoal: true },\n        nextElse: {\n          index: 0,\n          midpoints: [\n            { x: 150, y: 20 },\n            { x: 45, y: 20 },\n            { x: 45, y: 50 },\n          ],\n        },\n      },\n    ],\n  },\n  {\n    id: 9,\n    nodes: [\n      {\n        type: \"condition\",\n        isStart: true,\n        coords: { x: 40, y: 50 },\n        nextIf: {\n          index: 5,\n          midpoints: [{ x: 40, y: 75 }],\n        },\n        nextElse: { index: 1 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 70, y: 50 },\n        next: { index: 2 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 100, y: 50 },\n        next: { index: 3 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 130, y: 50 },\n        next: { index: 4 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 160, y: 50 },\n        next: {\n          index: 0,\n          midpoints: [\n            { x: 160, y: 25 },\n            { x: 40, y: 25 },\n          ],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 70, y: 75 },\n        next: { index: 6 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 100, y: 75 },\n        next: { index: 7 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 130, y: 75 },\n        next: { index: -1, isGoal: true },\n      },\n    ],\n  },\n  {\n    id: 10,\n    portalPos: \"down\",\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 40, y: 50 },\n        next: { index: 1 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 70, y: 50 },\n        next: { index: 2 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 100, y: 50 },\n        next: { index: 3 },\n      },\n      {\n        type: \"path\",\n        coords: { x: 130, y: 50 },\n        next: { index: 4 },\n      },\n      {\n        type: \"condition\",\n        coords: { x: 160, y: 50 },\n        nextIf: { index: -1, isGoal: true },\n        nextElse: {\n          index: 0,\n          midpoints: [\n            { x: 160, y: 25 },\n            { x: 40, y: 25 },\n          ],\n        },\n      },\n    ],\n  },\n  {\n    id: 11,\n    nodes: [\n      {\n        type: \"path\",\n        isStart: true,\n        coords: { x: 40, y: 50 },\n        next: { index: 1 },\n      },\n      {\n        type: \"condition\",\n        coords: { x: 70, y: 50 },\n        nextIf: {\n          index: 2,\n          midpoints: [{ x: 70, y: 35 }],\n        },\n        nextElse: {\n          index: 3,\n          midpoints: [{ x: 70, y: 65 }],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 100, y: 35 },\n        next: {\n          index: 4,\n          midpoints: [{ x: 130, y: 35 }],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 100, y: 65 },\n        next: {\n          index: 4,\n          midpoints: [{ x: 130, y: 65 }],\n        },\n      },\n      {\n        type: \"path\",\n        coords: { x: 130, y: 50 },\n        next: { index: 5 },\n      },\n      {\n        type: \"condition\",\n        coords: { x: 160, y: 50 },\n        nextIf: { index: -1, isGoal: true },\n        nextElse: {\n          index: 0,\n          midpoints: [\n            { x: 160, y: 20 },\n            { x: 40, y: 20 },\n          ],\n        },\n      },\n    ],\n  },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ConditionalToken, Level } from \"../data/levels\";\nimport { MapConfig, mapConfigs, PathColor } from \"../data/maps\";\nimport { scrolls } from \"../data/scrolls\";\n\ninterface ITokenState {\n  type: \"path\" | \"condition\";\n  scrollNode?: number;\n}\n\ninterface PathTokenState extends ITokenState {\n  type: \"path\";\n  color: PathColor;\n}\n\ninterface ConditionalTokenState extends ITokenState {\n  type: \"condition\";\n  token: ConditionalToken;\n}\n\nexport type TokenState = PathTokenState | ConditionalTokenState;\n\nexport type GameState = {\n  crystalsOnMapNode: Record<number, number>;\n  tokens: TokenState[];\n  playerLoc: number;\n  level: Level | null;\n  playingScrollNode: number;\n  playbackInProgress: boolean;\n};\n\nconst initialState: GameState = {\n  crystalsOnMapNode: {},\n  tokens: [],\n  playerLoc: -1,\n  playingScrollNode: 0,\n  level: null,\n  playbackInProgress: false,\n};\n\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState,\n  reducers: {\n    resetState: () => initialState,\n    loadLevel: (state, action: PayloadAction<Level>) => {\n      const { crystalLocs, colorTokens, conditionalTokens, startLoc } =\n        action.payload;\n\n      state.crystalsOnMapNode = {};\n      crystalLocs.forEach((loc) => {\n        state.crystalsOnMapNode[loc] = state.crystalsOnMapNode[loc] || 0;\n        state.crystalsOnMapNode[loc]++;\n      });\n\n      state.tokens = [\n        ...colorTokens.map((color) => ({ color, type: \"path\" as const })),\n        ...conditionalTokens.map((token) => ({\n          token,\n          type: \"condition\" as const,\n        })),\n      ];\n\n      state.playerLoc = startLoc;\n      state.level = action.payload;\n    },\n    // some but not all the stuff from above. TODO refactor\n    resetLevel: (state) => {\n      if (!state.level) return;\n      const { crystalLocs, startLoc } = state.level;\n\n      state.crystalsOnMapNode = {};\n      crystalLocs.forEach((loc) => {\n        state.crystalsOnMapNode[loc] = state.crystalsOnMapNode[loc] || 0;\n        state.crystalsOnMapNode[loc]++;\n      });\n\n      state.playerLoc = startLoc;\n    },\n    moveToken: (\n      state,\n      action: PayloadAction<{\n        tokenIdx: number;\n        scrollNodeIdx?: number;\n      }>\n    ) => {\n      // TODO validate token type/node type? validate node is full?\n      const { tokenIdx, scrollNodeIdx } = action.payload;\n      if (typeof scrollNodeIdx === \"number\") {\n        state.tokens[tokenIdx].scrollNode = scrollNodeIdx;\n      } else {\n        delete state.tokens[tokenIdx].scrollNode;\n      }\n    },\n    setPlayback: (state, action: PayloadAction<boolean>) => {\n      state.playbackInProgress = action.payload;\n    },\n    advancePlayer: (state) => {\n      if (!state.playbackInProgress) return;\n\n      // do nothing if at end of scroll\n      if (state.playingScrollNode < 0) return;\n\n      const scroll = scrolls.find((s) => s.id === state.level?.scrollId);\n      const map = mapConfigs.find((m) => m.id === state.level?.mapId);\n      const scrollNode = scroll?.nodes[state.playingScrollNode];\n      const token = state.tokens.find(\n        (t) => t.scrollNode === state.playingScrollNode\n      );\n\n      if (scrollNode?.type === \"path\" && token?.type === \"path\") {\n        const path = map?.paths.find((p) => {\n          const colorMatch = p.color === token?.color;\n          const nodeMatch = p.directional\n            ? p.nodeIdxs[0] === state.playerLoc\n            : p.nodeIdxs.includes(state.playerLoc);\n\n          return colorMatch && nodeMatch;\n        });\n        // stop playback if no path is found\n        if (!path) {\n          state.playbackInProgress = false;\n          return;\n        }\n\n        const newLoc =\n          path.nodeIdxs[0] === state.playerLoc\n            ? path.nodeIdxs[1]\n            : path.nodeIdxs[0];\n        if (typeof newLoc === \"number\") {\n          state.playerLoc = newLoc;\n          // remove a crystal if there is one\n          if (state.crystalsOnMapNode[state.playerLoc]) {\n            state.crystalsOnMapNode[state.playerLoc]--;\n          }\n        }\n        state.playingScrollNode = scrollNode.next.index;\n      } else if (\n        scrollNode?.type === \"condition\" &&\n        token?.type === \"condition\"\n      ) {\n        state.playingScrollNode = evaluateCondition(state, token.token, map)\n          ? scrollNode.nextIf.index\n          : scrollNode.nextElse.index;\n      }\n    },\n  },\n});\n\nconst evaluateCondition = (\n  state: GameState,\n  token: ConditionalToken,\n  map?: MapConfig\n) => {\n  if (!state.level) return false;\n\n  if (token.tokenType === \"troll\") {\n    return map?.trollLocs[token.trollType].includes(state.playerLoc);\n  } else if (token.tokenType === \"crystal\") {\n    const crystalsLeft = Object.values(state.crystalsOnMapNode).reduce(\n      (a, b) => a + b,\n      0\n    );\n    const numCrystals = state.level.crystalLocs.length - crystalsLeft;\n    return numCrystals === token.amount;\n  }\n  return false;\n};\n\nexport const {\n  loadLevel,\n  moveToken,\n  advancePlayer,\n  resetLevel,\n  setPlayback,\n  resetState,\n} = gameSlice.actions;\n\nexport default gameSlice.reducer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Level, levels } from \"../data/levels\";\nimport { mapConfigs } from \"../data/maps\";\nimport { scrolls } from \"../data/scrolls\";\nimport { resetState } from \"../store/slice\";\n\nconst isDisabled = (level: Level) => {\n  return scrolls.every((scroll) => scroll.id !== level.scrollId);\n};\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(resetState());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {levels.map((level) => (\n        <Link key={level.id} to={`/level/${level.id}`}>\n          <Item disabled={isDisabled(level)}>{level.id}</Item>\n        </Link>\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${mapConfigs.length}, 1fr);\n  grid-gap: 10px;\n  padding: 20px;\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst Item = styled.button`\n  border-radius: 4px;\n  border: 1px solid black;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 50px;\n  cursor: pointer;\n`;\n\nexport default Home;\n","export type Coord = {\n  x: number;\n  y: number;\n};\n\nexport const getSlope = (point1: Coord, point2: Coord): number => {\n  const { x: x1, y: y1 } = point1;\n  const { x: x2, y: y2 } = point2;\n  return (y2 - y1) / (x2 - x1);\n};\n\nexport const getPointRAwayAlongLine = (\n  nearPoint: Coord,\n  farPoint: Coord,\n  R: number\n): Coord => {\n  const { x: x1, y: y1 } = nearPoint;\n  const { x: x2, y: y2 } = farPoint;\n  let deltaX, deltaY;\n  if (x2 === x1) {\n    deltaX = 0;\n    deltaY = y2 > y1 ? R : -R;\n  } else {\n    const m = (y2 - y1) / (x2 - x1);\n    deltaX = Math.sqrt(R ** 2 / (1 + m ** 2));\n    if (x2 < x1) deltaX = -1 * deltaX;\n    deltaY = m * deltaX;\n  }\n\n  return { x: x1 + deltaX, y: y1 + deltaY };\n};\n\nexport const getPointsRAwayGivenSlope = (\n  nearPoint: Coord,\n  m: number,\n  R: number\n): Coord[] => {\n  const { x, y } = nearPoint;\n\n  let deltaX, deltaY;\n\n  if (m === Infinity || m === -Infinity) {\n    deltaX = 0;\n    deltaY = R;\n  } else {\n    deltaX = Math.sqrt(R ** 2 / (1 + m ** 2));\n    deltaY = m * deltaX;\n  }\n\n  return [\n    { x: x + deltaX, y: y + deltaY },\n    { x: x - deltaX, y: y - deltaY },\n  ];\n};\n\nconst getArrowCoords = (\n  arrowOrigin: Coord,\n  arrowDest: Coord,\n  crossLength: number\n): Coord[] => {\n  const arrowCrossMidpoint = getPointRAwayAlongLine(\n    arrowDest,\n    arrowOrigin,\n    crossLength / Math.sqrt(2)\n  );\n  const arrowCrossSlope = -1 / getSlope(arrowOrigin, arrowDest);\n  const arrowCrossPoints = getPointsRAwayGivenSlope(\n    arrowCrossMidpoint,\n    arrowCrossSlope,\n    0.5 * crossLength\n  );\n  return [\n    arrowOrigin,\n    arrowCrossMidpoint,\n    arrowCrossPoints[0],\n    arrowDest,\n    arrowCrossPoints[1],\n    arrowCrossMidpoint,\n  ];\n};\n\nexport const drawArrow = (\n  startNodePos: Coord,\n  nextNodePos: Coord,\n  midpoints: Coord[],\n  nodeSpacing: number\n): Coord[] => {\n  if (midpoints.length > 0) {\n    const firstMidpoint = midpoints[0];\n    const lastMidpoint = midpoints.slice(-1)[0];\n    const allButLastMidpoints = midpoints.slice(0, -1);\n    const arrowOrigin = getPointRAwayAlongLine(\n      startNodePos,\n      firstMidpoint,\n      nodeSpacing\n    );\n    const arrowDest = getPointRAwayAlongLine(\n      nextNodePos,\n      lastMidpoint,\n      nodeSpacing\n    );\n    return [\n      arrowOrigin,\n      ...allButLastMidpoints,\n      ...getArrowCoords(lastMidpoint, arrowDest, 3),\n    ];\n  }\n\n  const arrowOrigin = getPointRAwayAlongLine(\n    startNodePos,\n    nextNodePos,\n    nodeSpacing\n  );\n  const arrowDest = getPointRAwayAlongLine(\n    nextNodePos,\n    startNodePos,\n    nodeSpacing\n  );\n  return getArrowCoords(arrowOrigin, arrowDest, 3);\n};\n\nexport const hexagon = (center: Coord, radius: number, offset = 0): Coord[] => {\n  const points: Coord[] = [];\n\n  for (let i = 0; i < 6; i++) {\n    const angle = (Math.PI / 3) * (i + offset);\n    points.push({\n      x: center.x + radius * Math.cos(angle),\n      y: center.y + radius * Math.sin(angle),\n    });\n  }\n\n  return points;\n};\n\nexport const pointInADirection = (\n  point: Coord,\n  direction: \"left\" | \"right\" | \"up\" | \"down\",\n  distance: number\n): Coord => {\n  const { x, y } = point;\n  switch (direction) {\n    case \"left\":\n      return { x: x - distance, y };\n    case \"right\":\n      return { x: x + distance, y };\n    case \"up\":\n      return { x, y: y - distance };\n    case \"down\":\n      return { x, y: y + distance };\n  }\n};\n\nexport const PHI = (1 + Math.sqrt(5)) / 2;\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { mapConfigs } from \"../data/maps\";\nimport { scrolls } from \"../data/scrolls\";\nimport { GameState } from \"./slice\";\n\nconst selectTokens = (state: GameState) => state.tokens;\nconst selectLevelScroll = (state: GameState) => {\n  return scrolls.find((s) => s.id === state.level?.scrollId);\n};\n\nexport const selectMapNodes = (state: GameState) => {\n  const mapId = state.level?.mapId;\n  return mapConfigs.find((m) => m.id === mapId)?.nodes || [];\n};\n\nexport const selectIsScrollFull = createSelector(\n  [selectTokens, selectLevelScroll],\n  (tokens, scroll) => {\n    if (!scroll) return false;\n    return scroll.nodes.every((_, i) => tokens.some((t) => t.scrollNode === i));\n  }\n);\n\nexport const selectNumCrystalsRemaining = (state: GameState) => {\n  return Object.values(state.crystalsOnMapNode).reduce((a, b) => a + b, 0);\n};\n","import { useEffect, useLayoutEffect, useRef } from 'react'\n\nfunction useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback if it changes.\n  useLayoutEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    // Note: 0 is a valid value for delay.\n    if (!delay && delay !== 0) {\n      return\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay)\n\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsScrollFull } from \"../store/selectors\";\nimport {\n  advancePlayer,\n  GameState,\n  resetLevel,\n  setPlayback,\n} from \"../store/slice\";\nimport useInterval from \"../utils/useInterval\";\n\nconst P_L = 20;\nconst P_C = { x: 100, y: 0 };\n\nconst PlayButton = () => {\n  const isScrollFull = useSelector(selectIsScrollFull);\n  const isPlaying = useSelector((state: GameState) => state.playbackInProgress);\n  const dispatch = useDispatch();\n\n  useInterval(() => dispatch(advancePlayer()), isPlaying ? 1500 : null);\n\n  React.useEffect(() => {\n    if (!isPlaying) {\n      dispatch(resetLevel());\n    }\n  }, [isPlaying, dispatch]);\n\n  if (!isScrollFull) {\n    return null;\n  }\n\n  if (isPlaying) {\n    return (\n      <rect\n        width={P_L}\n        height={P_L}\n        x={P_C.x - P_L / 2}\n        y={P_C.y - P_L / 2}\n        fill=\"black\"\n        onClick={() => dispatch(setPlayback(false))}\n      />\n    );\n  }\n\n  return (\n    <polygon\n      fill=\"black\"\n      onClick={() => dispatch(setPlayback(true))}\n      points={`\n        ${P_C.x + P_L / 2},${P_C.y}\n        ${P_C.x - P_L / 2},${P_C.y + P_L / Math.sqrt(3)}\n        ${P_C.x - P_L / 2},${P_C.y - P_L / Math.sqrt(3)}\n      `}\n    />\n  );\n};\n\nexport default PlayButton;\n","import { useSpring, animated, config } from \"react-spring\";\nimport React from \"react\";\nimport { TokenState } from \"../store/slice\";\nimport { Coord } from \"../utils/geometryUtils\";\n\ntype TokenProps = {\n  tokenState: TokenState;\n  center: Coord;\n  size: number;\n  isEmpty?: boolean;\n  isFlashing?: boolean;\n  onMouseDown?: (e: React.MouseEvent<SVGElement>) => void;\n};\n\n// const shadowColor = \"#00e6da\";\n// const shadowColor = \"#e2e600\";\nconst shadowColor = \"#F8CD0E\"; // spelling-bee-yellow\n\nconst Token = ({\n  tokenState,\n  center,\n  size,\n  isEmpty,\n  onMouseDown,\n  isFlashing,\n}: TokenProps) => {\n  const { filter } = useSpring({\n    from: { filter: `drop-shadow(0 0 0 ${shadowColor})` },\n    to: [\n      { filter: `drop-shadow(0 0 3 ${shadowColor})` },\n      { filter: `drop-shadow(0 0 0 ${shadowColor})` },\n    ],\n    loop: true,\n    config: config.slow,\n  });\n\n  if (tokenState.type === \"path\") {\n    // render color circle\n    return (\n      <animated.circle\n        cx={center.x}\n        cy={center.y}\n        r={size / 2}\n        fill={isEmpty ? \"none\" : tokenState.color}\n        stroke={isEmpty ? \"black\" : \"none\"}\n        strokeWidth={0.2}\n        strokeDasharray={isEmpty ? \"1 1\" : \"none\"}\n        onMouseDown={onMouseDown}\n        filter={isFlashing ? filter : \"none\"}\n      />\n    );\n  }\n\n  if (tokenState.type === \"condition\") {\n    if (tokenState.token.tokenType === \"crystal\") {\n      // background color?\n      return (\n        <g onMouseDown={onMouseDown} pointerEvents=\"bounding-box\">\n          <rect\n            x={center.x - size / 2}\n            y={center.y - size / 2}\n            width={size}\n            height={size}\n            fill=\"none\"\n            stroke=\"black\"\n            strokeWidth={isEmpty ? 0.2 : 0.5}\n            strokeDasharray={isEmpty ? \"1 1\" : \"\"}\n          />\n          {!isEmpty && (\n            <text\n              x={center.x}\n              y={center.y}\n              alignmentBaseline=\"central\"\n              textAnchor=\"middle\"\n              fontSize={8}\n              cursor=\"default\"\n            >\n              {tokenState.token.amount}\n            </text>\n          )}\n        </g>\n      );\n    }\n\n    if (tokenState.token.tokenType === \"troll\") {\n      return (\n        <rect\n          x={center.x - size / 2}\n          y={center.y - size / 2}\n          width={size}\n          height={size}\n          fill={isEmpty ? \"none\" : tokenState.token.trollType}\n          stroke={isEmpty ? \"black\" : \"none\"}\n          strokeWidth={0.2}\n          strokeDasharray=\"1 1\"\n          onMouseDown={onMouseDown}\n        />\n      );\n    }\n  }\n\n  return null;\n};\n\nexport default Token;\n","import React from \"react\";\n\nconst Bee = React.memo(() => {\n  return (\n    <svg width=\"81\" height=\"81\" viewBox=\"0 0 81 81\" fill=\"none\">\n      <g clipPath=\"url(#clip0)\">\n        <path\n          d=\"M42.0259 30.2053V21.2053C42.0259 16.2053 38.0259 12.2053 33.0259 12.2053C28.0259 12.2053 24.0259 16.2053 24.0259 21.2053C24.0259 26.2053 28.0259 30.2053 33.0259 30.2053H42.0259Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M60.3259 27.6053C63.8259 24.1053 63.9259 18.4053 60.4259 14.9053C56.9259 11.4053 51.2259 11.4053 47.7259 14.9053C46.0259 16.6053 45.0259 18.9053 45.0259 21.3053V30.3053H54.0259C56.4259 30.3053 58.7259 29.3053 60.3259 27.6053Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M17.8259 50.9053C17.8259 59.3053 23.0259 66.0053 30.5259 67.9053V34.3053C23.1259 36.9053 17.8259 43.5053 17.8259 50.9053Z\"\n          fill=\"#F8CD0E\"\n        />\n        <path\n          d=\"M51.8257 68.5053C57.2257 68.0053 62.1257 65.4053 65.5257 61.2053C61.8257 62.2053 57.8257 61.1053 55.1257 58.4053L57.2257 56.3053C60.3257 59.3053 65.2257 59.4053 68.3257 56.4053C69.0257 54.6053 69.3257 52.8053 69.3257 50.9053C69.5257 41.4053 62.1257 33.6053 52.6257 33.3053C52.4257 33.3053 52.1257 33.3053 51.9257 33.3053H45.1257V68.5053H51.8257ZM56.1257 43.9053C57.8257 43.9053 59.2257 45.3053 59.2257 47.1053C59.2257 48.8053 57.8257 50.2053 56.0257 50.2053C54.3257 50.2053 52.9257 48.8053 52.9257 47.0053C53.0257 45.3053 54.4257 43.9053 56.1257 43.9053Z\"\n          fill=\"#F8CD0E\"\n        />\n        <path\n          d=\"M35.2259 33.3053C34.6259 33.3053 34.0259 33.4053 33.5259 33.5053V68.4053C34.0259 68.4053 34.6259 68.5053 35.1259 68.5053H42.0259V33.3053H35.2259Z\"\n          fill=\"#F8CD0E\"\n        />\n        <path\n          d=\"M56.1258 50.2053C57.8258 50.2053 59.2258 48.8053 59.2258 47.0053C59.2258 45.2053 57.8258 43.9053 56.0258 43.9053C54.2258 43.9053 52.9258 45.3053 52.9258 47.0053C52.9258 48.7053 54.4258 50.2053 56.1258 50.2053Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M59.7258 31.8053C60.7258 31.3053 61.6258 30.6053 62.5258 29.8053C67.2258 25.1053 67.2258 17.5053 62.5258 12.8053C57.8258 8.10532 50.2258 8.10532 45.5258 12.8053C44.7258 13.6053 44.0258 14.5053 43.5258 15.5053C40.3258 9.70532 33.1258 7.50532 27.2258 10.7053C21.3258 13.9053 19.2258 21.1053 22.4258 27.0053C23.6258 29.3053 25.6258 31.1053 28.0258 32.2053C20.7258 35.2053 15.5258 41.9053 14.8258 49.4053H9.22583V52.4053H14.8258C15.4258 63.2053 24.3258 71.6053 35.1258 71.5053H51.9258C63.1258 70.6053 72.2258 61.4053 72.2258 50.9053C72.4258 42.5053 67.4258 35.0053 59.7258 31.8053ZM30.5258 67.9053C23.0258 65.9053 17.8258 59.3053 17.8258 50.9053C17.8258 43.6053 23.2258 36.9053 30.5258 34.4053V67.9053ZM42.0258 68.5053H35.1258C34.6258 68.5053 34.0258 68.5053 33.5258 68.4053V33.5053C34.1258 33.4053 34.7258 33.3053 35.2258 33.3053H42.0258V68.5053ZM42.0258 30.3053H33.0258C30.6258 30.3053 28.3258 29.4053 26.6258 27.7053C23.1258 24.2053 23.0258 18.5053 26.5258 15.0053C30.0258 11.5053 35.7258 11.4053 39.2258 14.9053C40.9258 16.6053 41.9258 18.9053 41.9258 21.3053L42.0258 30.3053ZM45.0258 21.3053C45.0258 16.3053 49.0258 12.3053 54.0258 12.3053C59.0258 12.3053 63.0258 16.3053 63.0258 21.3053C63.0258 26.3053 59.0258 30.3053 54.0258 30.3053H45.0258V21.3053ZM57.1258 56.3053L55.0258 58.4053C57.7258 61.1053 61.7258 62.2053 65.4258 61.2053C62.0258 65.4053 57.1258 68.0053 51.7258 68.4053H44.9258V33.3053H51.7258C61.2258 33.1053 69.0258 40.6053 69.2258 50.1053C69.2258 50.4053 69.2258 50.6053 69.2258 50.9053C69.2258 52.8053 68.9258 54.7053 68.2258 56.4053C65.2258 59.4053 60.2258 59.4053 57.1258 56.3053Z\"\n          fill=\"black\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect\n            x=\"9.22583\"\n            y=\"9.20532\"\n            width=\"63.1\"\n            height=\"62.3\"\n            fill=\"white\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n});\n\nexport default Bee;\n","import React from \"react\";\nimport { Coord, hexagon } from \"../../utils/geometryUtils\";\n\ntype HexagonProps = {\n  center: Coord;\n  radius: number;\n  fill: string;\n  strokeWidth: number;\n};\n\nconst Hexagon = ({ center, radius, fill, strokeWidth }: HexagonProps) => {\n  const points = hexagon(center, radius)\n    .map(({ x, y }) => `${x}, ${y}`)\n    .join(\" \");\n\n  return (\n    <polygon\n      points={points}\n      stroke=\"black\"\n      fill={fill}\n      strokeWidth={strokeWidth}\n    />\n  );\n};\n\nexport default Hexagon;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectNumCrystalsRemaining } from \"../../store/selectors\";\nimport { Coord, hexagon } from \"../../utils/geometryUtils\";\nimport Hexagon from \"./Hexagon\";\n\ntype HiveProps = {\n  center: Coord;\n  radius: number;\n  fill?: string;\n  ignoreEmpty?: boolean;\n};\n\nconst Hive = ({ center, radius, fill = \"#f8cd05\", ignoreEmpty }: HiveProps) => {\n  const emptyHexes = useSelector(selectNumCrystalsRemaining);\n  const points = [...hexagon(center, radius, 1 / 2), center];\n\n  return (\n    <g>\n      {points.map((point, i) => (\n        <Hexagon\n          key={`hex${i}`}\n          center={point}\n          radius={radius / Math.sqrt(3)}\n          fill={i >= emptyHexes || ignoreEmpty ? fill : \"none\"}\n          strokeWidth={radius / 10}\n        />\n      ))}\n    </g>\n  );\n};\n\nexport default Hive;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Coord,\n  drawArrow,\n  PHI,\n  pointInADirection,\n} from \"../utils/geometryUtils\";\nimport PlayButton from \"./PlayButton\";\nimport { GameState } from \"../store/slice\";\nimport { NextNode, Scroll } from \"../data/scrolls\";\nimport Token from \"./Token\";\nimport { useDrag } from \"../utils/useDrag\";\nimport Bee from \"./icons/Bee\";\nimport Hive from \"./icons/Hive\";\n\ntype GameScrollProps = {\n  scroll: Scroll;\n};\n\nconst NODE_RADIUS = 8;\nconst NODE_STROKE_WIDTH = 1;\nconst W = 200;\n\nconst GameScroll = ({ scroll }: GameScrollProps) => {\n  const tokens = useSelector((state: GameState) => state.tokens);\n  const [tokensFlashing, setTokensFlashing] = React.useState(true);\n  const { dragTokenIdx, startDrag, svgRef, closeNodeIdx, dragCenter } = useDrag(\n    scroll,\n    tokens,\n    NODE_RADIUS\n  );\n  const tokenContainerHeight = W * (1 / PHI - 0.5);\n  const dragToken = dragTokenIdx > -1 && tokens[dragTokenIdx];\n\n  return (\n    <svg\n      viewBox={`0 0 ${W} ${W / PHI}`}\n      preserveAspectRatio=\"xMinYMax\"\n      ref={svgRef}\n    >\n      {/* helps with element inspector */}\n      <rect x={0} y={0} width={W} height={W / PHI} fill=\"none\" />\n      {/* token container */}\n      <rect\n        x={2}\n        y={W / 2 + 2}\n        width={W - 4}\n        height={tokenContainerHeight - 4}\n        rx={2}\n        stroke=\"black\"\n        strokeWidth={0.5}\n        fill=\"none\"\n      />\n      {tokens.map((token, i) => {\n        const isEmpty =\n          i === dragTokenIdx || typeof token.scrollNode === \"number\";\n\n        const x = (W / tokens.length) * (i + 1 / 2);\n        const y = W / 2 + tokenContainerHeight / 2;\n\n        return (\n          <Token\n            key={`tokens${i}`}\n            tokenState={token}\n            center={{ x, y }}\n            size={NODE_RADIUS * 2}\n            isEmpty={isEmpty}\n            onMouseDown={(e) => {\n              setTokensFlashing(false);\n              startDrag(e, i);\n            }}\n            isFlashing={tokensFlashing}\n          />\n        );\n      })}\n      {scroll.nodes.map((node, i) => {\n        const shapes = [];\n\n        const renderArrow = (\n          next: NextNode,\n          origin: { coords: Coord } = node,\n          key = \"\"\n        ) => {\n          const arrowPoints = drawArrow(\n            origin.coords,\n            scroll.nodes[next.index].coords,\n            next.midpoints || [],\n            NODE_RADIUS + NODE_STROKE_WIDTH / 2\n          );\n          shapes.push(\n            <polyline\n              key={`arrow${i}${key}`}\n              points={arrowPoints.map(({ x, y }) => `${x}, ${y}`).join(\" \")}\n              stroke=\"black\"\n              fill=\"none\"\n              strokeWidth={0.2}\n            />\n          );\n        };\n\n        if (node.type === \"path\" && node.next.index > -1) {\n          renderArrow(node.next);\n        }\n\n        if (\n          (node.type === \"path\" && node.next.index === -1) ||\n          (node.type === \"condition\" && node.nextIf.index === -1) ||\n          (node.type === \"condition\" && node.nextElse.index === -1)\n        ) {\n          const portalCenter = pointInADirection(\n            node.coords,\n            scroll.portalPos || \"right\",\n            30\n          );\n          shapes.push(\n            <Hive key=\"hive\" center={portalCenter} radius={5} ignoreEmpty />\n          );\n          const arrowPoints = drawArrow(\n            node.coords,\n            portalCenter,\n            [],\n            NODE_RADIUS\n          );\n          shapes.push(\n            <polyline\n              key=\"arrow-hive\"\n              points={arrowPoints.map(({ x, y }) => `${x}, ${y}`).join(\" \")}\n              stroke=\"black\"\n              fill=\"none\"\n              strokeWidth={0.2}\n            />\n          );\n        }\n\n        if (node.type === \"condition\") {\n          if (node.nextIf.index > -1) {\n            // TODO: check and x\n            renderArrow(node.nextIf, node, \"-if\");\n          }\n          if (node.nextElse.index > -1) {\n            renderArrow(node.nextElse, node, \"-else\");\n          }\n        }\n\n        const filledIdx = tokens.findIndex((t) => t.scrollNode === i);\n        if (filledIdx > -1 && dragTokenIdx !== filledIdx) {\n          shapes.push(\n            <Token\n              key={`node-filled${i}`}\n              tokenState={tokens[filledIdx]}\n              center={node.coords}\n              size={NODE_RADIUS * 2}\n              onMouseDown={(e) => startDrag(e, filledIdx)}\n            />\n          );\n        }\n\n        if (node.type === \"path\") {\n          shapes.push(\n            <circle\n              key={`node${i}`}\n              r={NODE_RADIUS}\n              cx={node.coords.x}\n              cy={node.coords.y}\n              stroke=\"black\"\n              strokeWidth={\n                closeNodeIdx === i ? NODE_STROKE_WIDTH * 2 : NODE_STROKE_WIDTH\n              }\n              fill=\"none\"\n            />\n          );\n        }\n\n        if (node.type === \"condition\") {\n          shapes.push(\n            <rect\n              key={`node${i}`}\n              width={2 * NODE_RADIUS}\n              height={2 * NODE_RADIUS}\n              x={node.coords.x - NODE_RADIUS}\n              y={node.coords.y - NODE_RADIUS}\n              stroke=\"black\"\n              strokeWidth={NODE_STROKE_WIDTH}\n              fill=\"none\"\n            />\n          );\n        }\n\n        if (node.isStart) {\n          const beeCenter = pointInADirection(\n            node.coords,\n            scroll.playerPos || \"left\",\n            30\n          );\n          shapes.push(\n            <g\n              key=\"bee\"\n              transform={`translate(${beeCenter.x - 9}, ${\n                beeCenter.y - 9\n              }) scale(0.2222222)`}\n            >\n              <Bee />\n            </g>\n          );\n          renderArrow({ index: 0 }, { coords: beeCenter }, \"-start\");\n        }\n\n        return shapes;\n      })}\n      {dragToken && dragCenter && (\n        <Token\n          key=\"draggable\"\n          tokenState={dragToken}\n          center={dragCenter}\n          size={NODE_RADIUS * 2}\n        />\n      )}\n      <PlayButton />\n    </svg>\n  );\n};\n\nexport default GameScroll;\n","import { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Scroll } from \"../data/scrolls\";\nimport { moveToken, TokenState } from \"../store/slice\";\nimport { Coord } from \"./geometryUtils\";\n\nexport const useDrag = (\n  scroll: Scroll,\n  tokens: TokenState[],\n  nodeRadius: number\n) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [dragTokenIdx, setDragTokenIdx] = useState(-1);\n  const [dragStart, setDragStart] = useState<Coord | null>(null);\n  const [dragCenter, setDragCenter] = useState<Coord | null>(null);\n  const [closeNodeIdx, setCloseNodeIdx] = useState(-1);\n  const dispatch = useDispatch();\n\n  const startDrag = (event: React.MouseEvent<SVGElement>, tokenIdx: number) => {\n    event.preventDefault();\n    let point = new DOMPoint(event.clientX, event.clientY);\n    point = point.matrixTransform(svgRef.current?.getScreenCTM()?.inverse());\n    setDragTokenIdx(tokenIdx);\n    setDragStart({\n      x: point.x,\n      y: point.y,\n    });\n\n    // hacky af but works, i think\n    let closeNodeIdxTemp = closeNodeIdx;\n\n    const mousemove = (e: MouseEvent) => {\n      e.preventDefault();\n      const point = new DOMPoint(e.clientX, e.clientY);\n      const cursor = point.matrixTransform(\n        svgRef.current?.getScreenCTM()?.inverse()\n      );\n      const center = {\n        x: cursor.x - (dragStart?.x || 0),\n        y: cursor.y - (dragStart?.y || 0),\n      };\n      setDragCenter(center);\n\n      const closeEnough = scroll.nodes.findIndex((node, i) => {\n        // if node is occupied it can't be dropped into\n        // TODO: also do if node is of different type than token\n        if (tokens.some((t, tIdx) => tIdx !== tokenIdx && t.scrollNode === i)) {\n          return false;\n        }\n\n        const dSquared =\n          (node.coords.x - center.x) ** 2 + (node.coords.y - center.y) ** 2;\n        return dSquared < nodeRadius ** 2;\n      });\n\n      if (closeEnough !== closeNodeIdxTemp) {\n        closeNodeIdxTemp = closeEnough;\n        setCloseNodeIdx(closeEnough);\n      }\n    };\n\n    const mouseup = () => {\n      if (closeNodeIdxTemp > -1) {\n        dispatch(\n          moveToken({\n            tokenIdx,\n            scrollNodeIdx: closeNodeIdxTemp,\n          })\n        );\n        setCloseNodeIdx(-1);\n      } else {\n        dispatch(moveToken({ tokenIdx }));\n      }\n\n      setDragTokenIdx(-1);\n      setDragCenter(null);\n      setDragStart(null);\n      document.removeEventListener(\"mousemove\", mousemove);\n      document.removeEventListener(\"mouseup\", mouseup);\n    };\n\n    document.addEventListener(\"mousemove\", mousemove);\n    document.addEventListener(\"mouseup\", mouseup);\n  };\n\n  return {\n    dragTokenIdx,\n    startDrag,\n    svgRef,\n    dragCenter,\n    closeNodeIdx,\n  };\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport { selectMapNodes } from \"../store/selectors\";\nimport { GameState } from \"../store/slice\";\nimport Bee from \"./icons/Bee\";\n\ntype FlyingBeeProps = {\n  nodeSideLength: number;\n};\n\nconst FlyingBee = ({ nodeSideLength }: FlyingBeeProps) => {\n  const playerLoc = useSelector((state: GameState) => state.playerLoc);\n  const mapNodes = useSelector(selectMapNodes);\n  const mapNode = mapNodes[playerLoc];\n  const x = mapNode.x - nodeSideLength / 2;\n  const y = mapNode.y - nodeSideLength / 2;\n\n  const { transform } = useSpring({\n    to: { transform: `translate(${x}, ${y}) scale(0.12)` },\n  });\n\n  if (!mapNode) {\n    return null;\n  }\n\n  return (\n    <animated.g transform={transform}>\n      <Bee />\n    </animated.g>\n  );\n};\n\nexport default FlyingBee;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { MapConfig, TrollType } from \"../data/maps\";\nimport { GameState } from \"../store/slice\";\nimport { drawArrow } from \"../utils/geometryUtils\";\nimport FlyingBee from \"./FlyingBee\";\nimport Hexagon from \"./icons/Hexagon\";\nimport Hive from \"./icons/Hive\";\n\nconst NODE_SIDE_LENGTH = 10;\nconst NODE_STROKE = 0.75;\n\ntype LevelMapProps = {\n  config: MapConfig;\n  portalLoc: number;\n};\n\nconst LevelMap = ({ config, portalLoc }: LevelMapProps) => {\n  const { nodes, paths, trollLocs } = config;\n  const crystalsOnMapNode = useSelector(\n    (state: GameState) => state.crystalsOnMapNode\n  );\n  const tokens = useSelector((state: GameState) => state.tokens);\n\n  return (\n    <svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMinYMin\">\n      {/* helps with element inspector */}\n      <rect x={0} y={0} width={100} height={100} fill=\"none\" />\n      {paths.map((path, i) => {\n        let pointsArr = [];\n        if (path.selfLoopDirection) {\n          const a = 0.35;\n          const b = 3;\n          const S = NODE_SIDE_LENGTH;\n          const N = nodes[path.nodeIdxs[0]];\n          const sign = path.selfLoopDirection === \"up\" ? -1 : 1;\n          pointsArr = [\n            { x: N.x - a * S, y: N.y + (sign * S) / 2 },\n            { x: N.x - a * S, y: N.y + sign * (S / 2 + b) },\n            { x: N.x + a * S, y: N.y + sign * (S / 2 + b) },\n            { x: N.x + a * S, y: N.y + (sign * S) / 2 },\n          ];\n        } else if (path.directional) {\n          const start = nodes[path.nodeIdxs[0]];\n          const end = nodes[path.nodeIdxs[1]];\n          const midpoints = path.middleCoords || [];\n          pointsArr = drawArrow(\n            start,\n            end,\n            midpoints,\n            NODE_SIDE_LENGTH / 2 + NODE_STROKE * 2\n          );\n          if (path.xOffset) {\n            pointsArr = pointsArr.map(({ x, y }) => ({\n              x: x + (path.xOffset || 0),\n              y,\n            }));\n          }\n        } else {\n          const startCoords = nodes[path.nodeIdxs[0]];\n          const endCoords = nodes[path.nodeIdxs[1]];\n          const middleCoords = path.middleCoords || [];\n          pointsArr = [startCoords, ...middleCoords, endCoords];\n        }\n        const points = pointsArr.map(({ x, y }) => `${x},${y}`).join(\" \");\n        return (\n          <polyline\n            key={`path${i}`}\n            points={points}\n            stroke={path.color}\n            fill=\"none\"\n            strokeWidth={1.25}\n          />\n        );\n      })}\n      {nodes.map((node, i) => {\n        const trollKeys = Object.keys(trollLocs) as TrollType[];\n        const trollColor = trollKeys.find((c) => trollLocs[c].includes(i));\n        const hasTrollColor =\n          trollColor &&\n          tokens.some(\n            (t) =>\n              t.type === \"condition\" &&\n              t.token.tokenType === \"troll\" &&\n              t.token.trollType === trollColor\n          );\n\n        const x = node.x - NODE_SIDE_LENGTH / 2;\n        const y = node.y - NODE_SIDE_LENGTH / 2;\n\n        const shapes = [\n          <rect\n            key={`node${i}`}\n            width={NODE_SIDE_LENGTH}\n            height={NODE_SIDE_LENGTH}\n            x={x}\n            y={y}\n            stroke={hasTrollColor ? trollColor : \"black\"}\n            strokeWidth={NODE_STROKE}\n            fill=\"#efefef\"\n          />,\n        ];\n\n        if (i === portalLoc) {\n          shapes.push(<Hive key=\"hive\" center={node} radius={2.4} />);\n        }\n\n        const numCrystals = crystalsOnMapNode[i] || 0;\n        for (let c = 0; c < numCrystals; c++) {\n          const L = NODE_SIDE_LENGTH / 3.3;\n          shapes.push(\n            <Hexagon\n              key={`crystal${c}`}\n              center={{\n                x: node.x - ((numCrystals - 1) * L) / 2 + L * c,\n                y: node.y,\n              }}\n              radius={2.4 / Math.sqrt(3)}\n              strokeWidth={0.25}\n              fill=\"#f8cd05\"\n            />\n          );\n        }\n\n        return shapes;\n      })}\n      <FlyingBee nodeSideLength={NODE_SIDE_LENGTH} />\n    </svg>\n  );\n};\n\nexport default LevelMap;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport GameScroll from \"./GameScroll\";\nimport { PHI } from \"../utils/geometryUtils\";\nimport LevelMap from \"./LevelMap\";\nimport { levels } from \"../data/levels\";\nimport { mapConfigs } from \"../data/maps\";\nimport { scrolls } from \"../data/scrolls\";\nimport { GameState, loadLevel } from \"../store/slice\";\n\nconst Game = () => {\n  // TODO: this looks like nonsense\n  const { levelId } = useParams();\n  const levelIdNumber = levelId && parseInt(levelId, 10);\n  const level = levels.find((l) => l.id === levelIdNumber);\n  const dispatch = useDispatch();\n  const loadedLevel = useSelector((state: GameState) => state.level);\n\n  React.useEffect(() => {\n    if (level) {\n      dispatch(loadLevel(level));\n    }\n  }, [level, dispatch]);\n\n  if (!loadedLevel) {\n    return null;\n  }\n\n  const { mapId, scrollId, portalLoc } = loadedLevel;\n\n  const mapConfig = mapConfigs.find((m) => m.id === mapId);\n  const scroll = scrolls.find((s) => s.id === scrollId);\n\n  if (!mapConfig || !scroll) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <svg viewBox={`0 0 100 ${100 * PHI}`} width=\"500px\">\n        <LevelMap config={mapConfig} portalLoc={portalLoc} />\n        <GameScroll scroll={scroll} />\n      </svg>\n    </Container>\n  );\n};\n\nexport default Game;\n\nconst Container = styled.div`\n  padding: 24px;\n  display: flex;\n  justify-content: center;\n\n  > svg {\n    max-width: 500px;\n    background-color: #efefef;\n    border: 1px solid black;\n  }\n`;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router\";\n\nimport Home from \"./Home\";\nimport Game from \"./Game\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/level/:levelId\" element={<Game />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport reducer from './slice'\n\nconst store  = configureStore({ reducer })\n\nexport default store\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport store from \"./store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}